# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  GlobalBuildNumber: $[counter('', 74)]
  ProductVersionNumber: 1.0.0
  PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip


name: $(BuildDefinitionName)_$(ProductVersionNumber)+$(GlobalBuildNumber)
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.9'
    architecture: 'x64'
- task: Cache@2
  inputs:
    key: 'python | "$(Agent.OS)" | requirements-dev.txt'
    restoreKeys: | 
      python | "$(Agent.OS)"
      python
    path: $(PIP_CACHE_DIR)
  displayName: Cache pip packages
- powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
  displayName: Add conda to PATH
- script: |
    conda env create -f environment_py311_from_cgm2.yml --yes --quiet
  displayName: Create Anaconda environment
- script: |
    conda init
    conda activate cgm2
    python -m pip install --upgrade pip
    pip install -r requirements-dev.txt
    conda install -c conda-forge btk
    conda install -c opensim-org opensim
    pip uninstall enum34 --yes
  displayName: 'Install dependencies'
- script: |
    pytest Tests --basetemp=..\pytest_temp --doctest-modules --junitxml=junit/test-results.xml --cov=qtmWebGaitReport --cov-report=xml --cov-report=html
  displayName: 'Test with pytest'
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
- script: |
    python create_new_version_file.py --build-name $(Build.BuildNumber)
    pyinstaller main.spec
  displayName: 'Create executable'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\dist'
    ArtifactName: $(Build.BuildNumber)
    publishLocation: 'Container'